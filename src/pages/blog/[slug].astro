---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";

import Layout from "../../layouts/Layout.astro";
import FormattedDate from "../../components/FormattedDate.astro";

interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blog = await getCollection("blog");
  return blog.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout title={post.data.title} description={post.data.excerpt}>
  <article class="h-entry" itemscope itemtype="https://schema.org/BlogPosting" itemid={Astro.request.url}>
    {post.data.cover && <Image src={post.data.cover} alt={post.data.title} class="mb-6" />}
    <h1 class="text-4xl mb-6 p-name" itemprop="name">{post.data.title}</h1>
    <p class="text-sm mb-6"><em>by</em> <a rel="author" class="p-author" href="/contact">Ruben Arakelyan</a></a> &middot; <a class="u-url" href={Astro.request.url}><FormattedDate date={post.data.date} classes="dt-published" itemprop="datePublished" /></a> &middot; <span class="p-category" itemprop="keywords">{post.data.tags.join(", ")}</span></p>
    <p class="text-xl mb-6 p-summary" itemprop="abstract">{post.data.excerpt}</p>
    <div class="prose prose-slate dark:prose-invert e-content">
      <Content />
    </div>
    <p class="mt-6"><a class="no-underline px-4 py-1 border rounded-full border-slate-600 bg-slate-600 dark:border-slate-200 dark:bg-slate-200 text-white dark:text-slate-600 hover:border-slate-900 hover:bg-slate-900 hover:text-white dark:hover:border-slate-500 dark:hover:bg-slate-500 transition duration-300 ease-in-out" href=`mailto:ruben@arakelyan.com?subject=Re:%20${encodeURIComponent(post.data.title)}`>Reply via email</a></p>
  </article>
</Layout>
