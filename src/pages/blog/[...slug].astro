---
import { getCollection, render } from "astro:content";
import sanitizeHtml from "sanitize-html";

import Layout from "../../layouts/Layout.astro";
import FormattedDate from "../../components/FormattedDate.astro";

const { slug } = Astro.params;
const posts = await getCollection("blog");
const post = posts.find((post) => post.id === slug);
if (!post) return Astro.redirect("/404");
const { Content, headings, remarkPluginFrontmatter } = await render(post);

// Webmentions
const webmentions = await fetch(`https://webmention.io/api/mentions.jf2?target=${Astro.site}blog/${post.id}/`).then((response) => response.json());
const allowedTypes = ["mention-of", "in-reply-to"];
const hasRequiredFields = entry => {
  const { author, published, content } = entry;
  return author.name && published && content;
};
const sanitize = entry => {
  const { content } = entry;
  if (content.html) {
    content.html = sanitizeHtml(content.html);
  }
  return entry;
};
const mentions = webmentions.children
  .filter(entry => allowedTypes.includes(entry["wm-property"]))
  .filter(hasRequiredFields)
  .map(sanitize);
---

<Layout title={post.data.title} description={post.data.excerpt}>
  <article class="h-entry grid grid-cols-[calc(50vw-28rem)_1fr_calc(50vw-28rem)] xl:grid-cols-[calc(50vw-46rem)_1fr_60vw_1fr_calc(50vw-46rem)]" itemscope itemtype="https://schema.org/BlogPosting" itemid={Astro.request.url}>
    <header class="m-8 col-start-2 col-end-3 xl:col-start-3 xl:col-end-4">
      <h1 class="p-name mb-6 text-6xl font-bold" itemprop="name">{post.data.title}</h1>
      <p class="p-summary text-3xl text-slate-600" itemprop="abstract" role="heading">{post.data.excerpt}</p>
      <hr class="my-6 border-t border-slate-300">
      <p class="text-lg"><em>by</em> <a rel="author" class="p-author" href="mailto:ruben@arakelyan.uk">Ruben Arakelyan</a></a> &middot; Published on <a class="u-url" href={Astro.request.url}><FormattedDate date={post.data.date} classes="dt-published" itemprop="datePublished" /></a> { post.data.updated && <>&middot; Last updated on <FormattedDate date={post.data.updated} classes="dt-updated" itemprop="dateModified" /></> } &middot; {remarkPluginFrontmatter.minutesRead}</p>
      <hr class="mt-6 border-t border-slate-300">
    </header>
    <nav class="mx-8 mb-8 col-start-2 xl:sticky xl:top-4 xl:self-start prose prose-slate">
      { headings.length > 0 &&
        <h2 class="mb-2 text-xl font-bold">Table of Contents</h2>
        <ul>
          {
            headings.map((heading) => (
              <li class="my-4">
                <a href={`#${heading.slug}`}>{heading.text}</a>
              </li>
            ))
          }
        </ul>
      }
    </nav>
    <div class="e-content mx-8 mb-8 col-start-2 xl:col-start-3 prose prose-slate text-2xl drop-cap">
      <Content />
      <p class="my-8 text-center">‚ÅÇ</p>
      {
        mentions.length > 0 &&
        <>
          <h2 id="webmentions" class="text-3xl font-bold">Webmentions</h2>
          {
            mentions.map((mention) => (
              <div class="u-comment h-cite border border-slate-300 p-8 pb-0" itemscope itemtype="https://schema.org/Comment" itemid={mention["wm-id"]}>
                <div class="flex justify-between">
                  <div>
                    {
                      mention.author.photo &&
                      <img src={mention.author.photo} alt={mention.author.name} width="50" height="50" class="inline-block rounded-full mr-2 not-prose" loading="lazy">
                    }
                    {
                      mention.author.url &&
                      <a rel="author nofollow ugc" href={mention.author.url} class="u-author h-card">{mention.author.name}</a>
                    }
                    {
                      !mention.author.url &&
                      <span class="u-author h-card" itemprop="author">{mention.author.name}</span>
                    }
                  </div>
                  <FormattedDate date={mention.published} classes="dt-published text-lg" itemprop="datePublished" />
                </div>
                <div class="e-content p-name" itemprop="comment">
                  <Fragment set:html={mention.content.html || mention.content.text} />
                </div>
              </div>
            ))
          }
        </>
      }
    </div>
    <div class="mx-8 mb-8 col-start-2 xl:col-start-4"></div>
  </article>
</Layout>
